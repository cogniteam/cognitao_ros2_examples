cmake_minimum_required(VERSION 3.5)
project(cognitao_ros2)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(action_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(std_msgs REQUIRED)
find_package(rosidl_typesupport_cpp REQUIRED)
find_package(rclcpp_action REQUIRED)
find_package(builtin_interfaces REQUIRED)
find_package(rosidl_default_runtime REQUIRED)
find_package(cognitao REQUIRED)


rosidl_generate_interfaces(${PROJECT_NAME}
  "msg/Event.msg"
  "msg/KeyValue.msg"
  "msg/Goal.msg"
  "action/Action.action"
  DEPENDENCIES builtin_interfaces action_msgs
)

#colcon build

# Build
#

#
# Compile all your code (data sources / runners / etc) in this single library
#


#
# Used to include generated messages/actions by this package
#
get_default_rmw_implementation(rmw_implementation)
find_package("${rmw_implementation}" REQUIRED)
get_rmw_typesupport(typesupport_impls "${rmw_implementation}" LANGUAGE "cpp")


add_library(cognitao_ros2_shared SHARED 
  src/runner/Ros2Runner.cpp
  src/runner/Ros2RunnerPlugin.cpp
  src/data_source/Ros2DataSource.cpp
  src/data_source/Ros2DataSource_pluggin.cpp
)

# 1 - Includes generated messages directories and local include/ dir
target_include_directories(cognitao_ros2_shared 
  PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

#

foreach(typesupport_impl ${typesupport_impls})
  rosidl_target_interfaces(cognitao_ros2_shared
    ${PROJECT_NAME} ${typesupport_impl}
  )
endforeach()
#

ament_target_dependencies(cognitao_ros2_shared 
  rclcpp
  std_msgs
  rclcpp_action
)

target_link_libraries(cognitao_ros2_shared
  CogniTao::cognitao_core
)

install(TARGETS
  cognitao_ros2_shared
  DESTINATION /usr/lib/cognitao/plugins/
)


add_executable(action_server_example 
  src/server_example/server_example_main.cpp
)

target_include_directories(action_server_example 
  PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

# #

# # 2 - For using messages generated by this package
# get_default_rmw_implementation(rmw_implementation)
# find_package("${rmw_implementation}" REQUIRED)
# get_rmw_typesupport(typesupport_impls "${rmw_implementation}" LANGUAGE "cpp")

foreach(typesupport_impl ${typesupport_impls})
  rosidl_target_interfaces(action_server_example
    ${PROJECT_NAME} ${typesupport_impl}
  )
endforeach()

ament_target_dependencies(action_server_example
  "rclcpp"
  "rclcpp_action"
  std_msgs
)

target_link_libraries(action_server_example ${rclcpp_LIBRARIES} ${rmw_connext_cpp_LIBRARIES} ${std_interfaces})

#install(TARGETS action_server_example
#  DESTINATION lib/${PROJECT_NAME})



if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
 
  ament_lint_auto_find_test_dependencies()
endif()


ament_export_dependencies(
  rosidl_default_runtime
)

ament_export_dependencies(rosidl_default_runtime)

ament_package()




